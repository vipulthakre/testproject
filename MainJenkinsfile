pipeline{
  agent any
  /*environment{
    def workspaceName = sh(script: "basename ${env.WORKSPACE}", returnStdout:true).trim()
  }*/
  stages{
      /*stage('Test'){
        steps{
          script{
            def pipeline = load 'pipeline.groovy'
            pipeline.test()
          }
      }
  }*/
    stage('Clone Appplication Source code'){
      steps{
        script{
            git branch: 'main', credentialsId: 'gitcred', url: 'https://github.com/vipulthakre/testproject.git'
        }
      }
    }
    /*stage('Clone Devops code'){
      steps{
        script{
          git branch: 'main', credentialsId: 'gitcred', url: 'https://github.com/vipulthakre/devops_sourceCode.git'
        }
      }
    }
    stage('Checkmarx scan'){
      steps{
        script{
          def cx = load 'pipeline.groovy'
          cx.sast()
        }
      }
    }
    stage('Build'){
      steps{
        script{
          def pipeline = load 'pipeline.groovy'
          pipeline.build()
        }
      }
    }
    stage('Upload to Jfrog'){
      steps{
        script{
          def pipeline = load 'pipeline.groovy'
          pipeline.uploadArtifactInJfrog()
        }
      }
    }*/
  }
  post{
    always{
      script{
          def buildNumber = env.BUILD_NUMBER
  def jobName = env.JOB_NAME
  def buildResult = currentBuild.result ?: 'UNKNOWN'
  def consoleOutputUrl = env.BUILD_URL
  
  sh "chmod +x mail.sh"
  sh "ls -l mail.sh" // Check if script exists and has execute permissions
  sh "./mail.sh '${buildResult}' '${consoleOutputUrl}' '${buildNumber}'"
      }
    }
  }
}
